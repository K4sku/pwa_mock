# Name of your application. Used to uniquely configure containers.
service: pwa_mock

# Name of the container image.
image: kasku/pwa_mock

# Deploy to these servers.
servers:
  - 130.162.62.43
options:
  log_lines: 200

# Credentials for your image host.
registry:
  username: kasku
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DB_HOST: 130.162.62.43
    POSTGRES_USER: webapp
    POSTGRES_DB: pwa_mock_production
  secret:
    - RAILS_MASTER_KEY
    - SECRET_KEY_BASE

# Use a different ssh user than root
ssh:
  user: opc

builder:
  args:
    RUBY_VERSION: 3.2.2
  local:
   arch: amd64
   host: unix:///Users/<%= `whoami`.strip %>/.docker/run/docker.sock

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:16-alpine
    host: 130.162.62.43
    port: 5432
    env:
      clear:
        POSTGRES_USER: webapp
        POSTGRES_DB: pwa_mock_production
      secret:
        - POSTGRES_PASSWORD
    directories:
      - ./data/db:/var/lib/postgresql/data
      - ./data/dbdumps:/dbdumps
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
